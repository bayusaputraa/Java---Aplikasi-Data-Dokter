/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Form;

import java.sql.Connection;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel; 

/**
 *
 * @author USER
 */
public class form_dokter extends javax.swing.JFrame {

    /**
     * Creates new form form_dokter
     */
    
    // Created By Bayu Saputra \\
    // TI/04/A/P \\
    // Ditemani secangkir sirup leci dan juga doi \\
    
    public Statement st; //Deklarasi variabel st dengan tipe data Statement. Digunakan untuk menjalankan pernyataan SQL pada database.
    public ResultSet rs; //Deklarasi variabel rs dengan tipe data ResultSet. Variabel ini akan digunakan untuk menyimpan hasil dari eksekusi pernyataan SQL.
    
    
    
    Connection cn = Form.KoneksiDatabase.BukaKoneksi(); //Membuat dan menginisialisasi variabel cn sebagai koneksi database dengan memanggil metode BukaKoneksi() dari kelas KoneksiDatabase yang berada dalam Package Form.
    
    public form_dokter() {
        initComponents();
        TampilData();
    }
    
    private void Bersih(){ //Class untuk membersihkan Filed dan Mengembalikan CMB menjadi NULL kembali
        txtKD.setText("");
        txtNama.setText("");
        txtSpesial.setText("");
        cmbKel.setSelectedItem("- Null -");
        TampilData(); 
    }
    
    private void TampilData() {
            try {
                st = cn.createStatement();
                rs = st.executeQuery("SELECT * FROM `tabel_dokter`");

                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("kd_dokter");
                model.addColumn("nm_dokter");
                model.addColumn("jns_kelamin");
                model.addColumn("spesialis");

                while (rs.next()) {
                    Object[] data = {
                        rs.getString("kd_dokter"),
                        rs.getString("nm_dokter"),
                        rs.getString("jns_kelamin"),
                        rs.getString("spesialis")
                    };
                  model.addRow(data);
                }

                tblData.setModel(model);

         } catch (Exception e) {
             e.printStackTrace();
                System.out.println(e); 
            //Mencetak informasi kesalahan (error) jika terjadi kesalahan dalam menjalankan pernyataan SQL atau mengambil data dari database.
            }
    }
    
    private void CariData(){
        try {
            st = cn.createStatement();
            rs = st.executeQuery("SELECT * FROM tabel_dokter WHERE " + "kd_dokter" + " LIKE '%" + txtKD.getText() + "%'");
            
            DefaultTableModel model = new DefaultTableModel();
                model.addColumn("kd_dokter");
                model.addColumn("nm_dokter");
                model.addColumn("jns_kelamin");
                model.addColumn("spesialis");

                while (rs.next()) {
                    Object[] data = {
                        rs.getString("kd_dokter"),
                        rs.getString("nm_dokter"),
                        rs.getString("jns_kelamin"),
                     rs.getString("spesialis")
                    };
                  model.addRow(data);
                }

                tblData.setModel(model);
            
        } catch (Exception e) {
            System.out.println(e);
        }
    
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtKD = new javax.swing.JTextField();
        txtNama = new javax.swing.JTextField();
        txtSpesial = new javax.swing.JTextField();
        cmbKel = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        btnBersih = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        btnSimpan2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dokter Apps");

        jLabel1.setText("Kode Dokter");

        jLabel2.setText("Nama");

        jLabel3.setText("Jenis Kelamin");

        jLabel4.setText("Spesialis");

        cmbKel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "- Null -", "Laki - laki", "Wanita" }));

        jButton1.setText("Cari");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "kd_dokter", "nm_dokter", "jns_kelamin", "spesialis"
            }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        btnBersih.setText("Bersih");
        btnBersih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBersihActionPerformed(evt);
            }
        });

        btnKeluar.setText("Keluar");
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });

        btnSimpan2.setText("Simpan");
        btnSimpan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpan2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtKD)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(51, 51, 51))
                            .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtSpesial, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbKel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSimpan2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnEdit)
                                .addGap(12, 12, 12)
                                .addComponent(btnHapus)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBersih)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnKeluar)))
                        .addContainerGap(11, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmbKel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSpesial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEdit)
                    .addComponent(btnHapus)
                    .addComponent(btnBersih)
                    .addComponent(btnKeluar)
                    .addComponent(btnSimpan2))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void btnBersihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBersihActionPerformed
        // TODO add your handling code here:
        Bersih();
    }//GEN-LAST:event_btnBersihActionPerformed

    private void btnSimpan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpan2ActionPerformed
        // TODO add your handling code here:
        try {
            st = cn.createStatement();
            if (txtNama.getText().equals("") || txtKD.getText().equals("")|| txtSpesial.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Data tidak boleh kosong", "Validasi Data", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            //aksi simpan data
            if (btnSimpan2.getText() == "Simpan") {
                String cek = "SELECT * FROM  tabel_dokter WHERE kd_dokter ='" + txtKD.getText() + "'";
                rs =st.executeQuery(cek);
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null,"Upps.. Data ini sudah ada");
                }else{
                    String sql = "INSERT INTO tabel_dokter VALUES('" + txtKD.getText() +"', '" + txtNama.getText() +"', '" + cmbKel.getSelectedItem().toString() +"', '" + txtSpesial.getText() +"')";
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null,"Data berhasil dimasukan");
                    Bersih();
                    TampilData();
                }
            }
        } catch (Exception e) {
            System.out.print(e);
            JOptionPane.showMessageDialog(null, "Data gagal ditambahkan \n" + e);
        }
    }//GEN-LAST:event_btnSimpan2ActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        // TODO add your handling code here:
        
        if (tblData.getSelectedRow() != -1) {
            txtKD.setText(tblData.getValueAt(tblData.getSelectedRow(), 0).toString());
            txtNama.setText(tblData.getValueAt(tblData.getSelectedRow(), 1).toString());
            cmbKel.setSelectedItem(tblData.getValueAt(tblData.getSelectedRow(), 2).toString());
            txtSpesial.setText(tblData.getValueAt(tblData.getSelectedRow(), 3).toString());
        }

        
    }//GEN-LAST:event_tblDataMouseClicked

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        try {
            if (btnEdit.getText() == "Edit") {
                
                Statement statement = cn.createStatement();
                statement.executeUpdate("SET innodb_lock_wait_timeout = 300");
                
                String update = "UPDATE `tabel_dokter` SET `kd_dokter`='" + txtKD.getText() + "',`nm_dokter`='" + txtNama.getText() + "',`jns_kelamin`= '" + cmbKel.getSelectedItem().toString() + "',`spesialis`='" + txtSpesial.getText() + "' WHERE `tabel_dokter`.`kd_dokter` = '" + txtKD.getText() + "'";
                st.executeUpdate(update);
                JOptionPane.showMessageDialog(null, "Data berhasil disimpan");
                Bersih();
                TampilData();
            }
            
        } catch (Exception e) {
            System.out.print(e);
            JOptionPane.showMessageDialog(null, "Data gagal diupdate \n" + e);
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
         if (txtKD.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Silahkan pilih data yang ingin dihapus");
        } else{
            int jawab = JOptionPane.showConfirmDialog(null, "Data ini akan dihapus, lanjutkan?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if (jawab == 0) {
                try {
                    st = cn.createStatement();
                    String sql ="DELETE FROM tabel_dokter WHERE kd_dokter ='" + txtKD.getText() +"'";
                    st.executeUpdate(sql);
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
                    TampilData();
                    Bersih();
                } catch (Exception e) {
                    System.out.println(e); 
                    JOptionPane.showMessageDialog(null, "Data gagal dihapus \n" + e);
                }
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        CariData();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(form_dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(form_dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(form_dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(form_dokter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new form_dokter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBersih;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnSimpan2;
    private javax.swing.JComboBox<String> cmbKel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtKD;
    private javax.swing.JTextField txtNama;
    private javax.swing.JTextField txtSpesial;
    // End of variables declaration//GEN-END:variables
}
